version: '3.8'
services:
 

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - elk

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - elk
    volumes:
      - kafka-data:/bitnami/kafka

  user_service:
    build: ./user_service # Remplacez par le chemin de votre projet Node.js pour le producteur
    container_name: user_service
    depends_on:
      - kafka
    environment:
      - KAFKA_URL=127.0.0.1:9092
    networks:
      - elk

  product_service:
    build: ./product_service # Remplacez par le chemin de votre projet Node.js pour le consommateur
    container_name: product_service
    depends_on:
      - kafka
    environment:
      - KAFKA_URL=127.0.0.1:9092
    networks:
      - elk

volumes:

  kafka-data:

networks:
  elk:
    driver: bridge
